name: Deliver to DockerHub
on:
  push:
  pull_request:
  release:
    types: [published]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cpplint
      - name: Lint with cpplint
        run: |
          make lint
  build:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: get_version
        name: Get version
        run: |
          echo "LEOCC_BUILD_VERSION=$(python get_app_version.py)" >> $GITHUB_OUTPUT
      - name: Check version
        run: |
          echo LEOCC_BUILD_VERSION
          echo ${{ steps.get_version.outputs.LEOCC_BUILD_VERSION }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          tags: kostaleonard/leocc:latest,kostaleonard/leocc:${{ steps.get_version.outputs.LEOCC_BUILD_VERSION }}
          outputs: type=docker,dest=/tmp/leocc.tar
          cache-from: type=gha
          cache-to: type=gha
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: leocc-image
          path: /tmp/leocc.tar
    outputs:
      LEOCC_BUILD_VERSION: ${{ steps.get_version.outputs.LEOCC_BUILD_VERSION }}
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: leocc-image
          path: .
      - name: Load Docker image
        run: |
          docker load -i leocc.tar
      - name: Run tests
        run: |
          docker run --rm kostaleonard/leocc:latest ./build/tests
  valgrind:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: leocc-image
          path: .
      - name: Load Docker image
        run: |
          docker load -i leocc.tar
      - name: Run valgrind on tests
        run: |
          docker run --rm kostaleonard/leocc:latest valgrind --leak-check=full --error-exitcode=1 ./build/tests
  trivy-scan:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: leocc-image
          path: .
      - name: Display downloaded files
        run: ls -R
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          input: '$GITHUB_WORKSPACE/leocc.tar'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  deliver:
    needs: [lint, build, test, valgrind, trivy-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # These build steps use the cached images according to docker/build-push-action docs.
      # We want to use the cached images so that we don't build twice.
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: kostaleonard/leocc:latest,kostaleonard/leocc:${{ needs.build.outputs.LEOCC_BUILD_VERSION }}
          cache-from: type=gha
          cache-to: type=gha
